warning: LF will be replaced by CRLF in css/style.css.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in css/style.scss.
The file will have its original line endings in your working directory
[1mdiff --git a/api.js b/api.js[m
[1mdeleted file mode 100644[m
[1mindex cb69e11..0000000[m
[1m--- a/api.js[m
[1m+++ /dev/null[m
[36m@@ -1,61 +0,0 @@[m
[31m-[m
[31m-import fetch from 'https://cdn.skypack.dev/node-fetch';[m
[31m-// get country by name function[m
[31m-export async function getCountries(countryName) {[m
[31m-  //fetch rest api versions 3.1 + 2[m
[31m-    const response = await fetch(`https://restcountries.com/v3.1/name/${countryName}?fullText=true`);[m
[31m-    const response2 = await fetch(`https://restcountries.com/v2/name/${countryName}`);[m
[31m-[m
[31m-    // create 2 response 1 for v3.1 and 2.0 for callingCodes[m
[31m-    const codes = await response2.json(); [m
[31m-    const countries = await response.json();[m
[31m-    // if none is typed[m
[31m-    if (countries.length === 0) {[m
[31m-    throw new Error(`Could not find country`);[m
[31m-    }[m
[31m-    // country object variables[m
[31m-    const country = countries[0];[m
[31m-    const telCode = codes[0];[m
[31m-[m
[31m-    [m
[31m-    // this will return the data from search[m
[31m-    return {[m
[31m-        name: country.name.common,[m
[31m-        latitude: country.latlng[0],[m
[31m-        longitude: country.latlng[1],[m
[31m-        population: country.population,[m
[31m-        currency: country.currencies.name,[m
[31m-        telcode: telCode.callingCodes[0],[m
[31m-        subregion: country.subregion,[m
[31m-        timezone: country.timezones[0],[m
[31m-        area: country.area,[m
[31m-        flag: country.flags.svg,[m
[31m-        shortName: country.altSpellings[0][m
[31m-    }; [m
[31m-}[m
[31m-[m
[31m-// get indenpendent date from samayo json using userinput[m
[31m-export async function getIndependenceYear(countryName) {[m
[31m-  try {[m
[31m-    // fetch information from samayo json[m
[31m-    const response = await fetch('https://raw.githubusercontent.com/samayo/country-json/master/src/country-by-independence-date.json');[m
[31m-    const countries = await response.json();[m
[31m-    // find country in file from input[m
[31m-    const country = countries.find(country => country.country && country.country.toLowerCase() === countryName.toLowerCase());[m
[31m-    if (!country) {[m
[31m-      // handaling errors[m
[31m-        throw new Error(`Could not find independence year for "${countryName}".`);[m
[31m-    }[m
[31m-[m
[31m-    // fix database[m
[31m-    if(countryName.toLowerCase() === "germany"){[m
[31m-      country.independence = 1866;[m
[31m-    }[m
[31m-    return country.independence;[m
[31m-    // return year[m
[31m-    [m
[31m-  } catch (error) {[m
[31m-    console.error(error);[m
[31m-    throw error;[m
[31m-  }[m
[31m-}[m
[1mdiff --git a/autocomplete.js b/autocomplete.js[m
[1mdeleted file mode 100644[m
[1mindex f64a945..0000000[m
[1m--- a/autocomplete.js[m
[1m+++ /dev/null[m
[36m@@ -1,41 +0,0 @@[m
[31m-[m
[31m-// autocomplete search[m
[31m-const input = document.getElementById('userinput');[m
[31m-const suggestionsContainer = document.getElementById('suggestions-container');[m
[31m-suggestionsContainer.classList.add('suggestions-container');[m
[31m-input.addEventListener('input', () => {[m
[31m-  const searchTerm = input.value.trim();[m
[31m-  if (searchTerm.length > 1) {[m
[31m-    fetch(`https://restcountries.com/v3.1/name/${searchTerm}`)[m
[31m-      .then(response => response.json())[m
[31m-      .then(countries => {[m
[31m-        suggestionsContainer.style.visibility = 'visible';[m
[31m-        const suggestions = countries.map(country => country.name.common || country.name);[m
[31m-        [m
[31m-        updateSuggestions(suggestions);[m
[31m-      })[m
[31m-      .catch(error => console.error(error));[m
[31m-  } else {[m
[31m-    updateSuggestions([]); [m
[31m-  }[m
[31m-});[m
[31m-[m
[31m-[m
[31m-// selectable suggestions results and clear suggestions[m
[31m-function updateSuggestions(suggestions) {[m
[31m-  while (suggestionsContainer.firstChild) {[m
[31m-    suggestionsContainer.removeChild(suggestionsContainer.firstChild);[m
[31m-  }[m
[31m-  for (const suggestion of suggestions) {[m
[31m-    const suggestionElem = document.createElement('div');[m
[31m-    suggestionElem.classList.add('suggestions-content');[m
[31m-    [m
[31m-    suggestionElem.innerText = suggestion;[m
[31m-    suggestionElem.addEventListener('click', () => {[m
[31m-      input.value = suggestion;[m
[31m-      updateSuggestions([]);[m
[31m-      suggestionsContainer.style.visibility = "hidden";[m
[31m-    });[m
[31m-    suggestionsContainer.appendChild(suggestionElem);[m
[31m-  }[m
[31m-}[m
[1mdiff --git a/check.js b/check.js[m
[1mdeleted file mode 100644[m
[1mindex 7c47498..0000000[m
[1m--- a/check.js[m
[1m+++ /dev/null[m
[36m@@ -1,98 +0,0 @@[m
[31m-import { getCountries, getIndependenceYear} from "/api.js";[m
[31m-import {userInput, searchBtn, grandParent, tries, maxTries, divNum} from "/main.js";[m
[31m-import { countryOfTheDay } from "./random.js";[m
[31m-[m
[31m-[m
[31m-// function for wrongAnswer[m
[31m-// function to fetch country object from search input[m
[31m-export function wrongAnswer(input) {[m
[31m-   // trageting input value [m
[31m-   input = document.getElementById('userinput').value[m
[31m-[m
[31m-   //looping throught countries using getCountries function (from api.js)[m
[31m-   getCountries(input).then(country => {[m
[31m- [m
[31m-     // is userinput matching to countryoftheday[m
[31m-     if (countryOfTheDay.name.common.toLowerCase() === country.name.toLowerCase()) {[m
[31m- [m
[31m-       // select svgs ** selectes only last 5 svgs to add class green[m
[31m-       const svgs = document.querySelectorAll(".clues-svg");[m
[31m- [m
[31m-       // calc to get 6 last svgs after search[m
[31m-       let calc1 = (divNum - 1) *6[m
[31m-       let padding = svgs.length - calc1[m
[31m- [m
[31m-       // looping throught all but country flag svg 1st[m
[31m-       for(let k = 1; k < padding; k++) {[m
[31m-         svgs[k].classList.add('green');[m
[31m-         svgs[k].src = "/images/correct.svg";[m
[31m-       }[m
[31m-       const parent = document.querySelector(".container-clues-feed");[m
[31m-       let newBoxReview = document.createElement("img");[m
[31m-       newBoxReview.classList.add(`box-review`);[m
[31m-       newBoxReview.id = `tryno-${tries}`;[m
[31m-       newBoxReview.src = "/images/correct.svg";[m
[31m-       parent.insertAdjacentElement("beforeend",newBoxReview);[m
[31m- [m
[31m-       document.querySelector(".country-flag").style = "filter: none;"[m
[31m-     }[m
[31m- [m
[31m- [m
[31m-     else{[m
[31m-       // comparing population and returning svgs accordingly[m
[31m-       if(countryOfTheDay.population < country.population){[m
[31m-         const svgs = document.querySelectorAll(".clues-svg");[m
[31m-         svgs[1].style = "transform: rotate(180deg);"; [m
[31m-       }[m
[31m-       if(countryOfTheDay.population === country.population){[m
[31m-         const svgs = document.querySelectorAll(".clues-svg");[m
[31m-         svgs[1].style = "transform: rotate(180deg);"; [m
[31m-         svgs[1].classList.add("green");[m
[31m-       }[m
[31m- [m
[31m-       // fetching country searched year of independance from smayo api[m
[31m-       getIndependenceYear(country.name).then(year => {[m
[31m-         country.year = year;[m
[31m-         // comparing with country of the day year[m
[31m-         if(countryOfTheDay.year === country.year ){[m
[31m-           // replacing svg accordingly[m
[31m-           const svgs = document.querySelectorAll(".clues-svg");[m
[31m-           svgs[2].src = "/images/correct.svg";[m
[31m-           svgs[2].classList.add("green");[m
[31m-         }[m
[31m-         if(countryOfTheDay.year < country.year ){[m
[31m-           // replacing svg accordingly[m
[31m-           const svgs = document.querySelectorAll(".clues-svg");[m
[31m-           svgs[2].style = "transform: rotate(180deg);"; [m
[31m-           }[m
[31m-       }).catch(error => {[m
[31m-         console.error(error)});[m
[31m-          [m
[31m-       // comparing area size and returning svgs accordingly[m
[31m-       if(countryOfTheDay.area < country.area){[m
[31m-         const svgs = document.querySelectorAll(".clues-svg");[m
[31m-         svgs[3].style = "transform: rotate(180deg);";[m
[31m-       };[m
[31m-[m
[31m-       // if the same sub region, returns green location svg[m
[31m-       if(countryOfTheDay.subregion === country.subregion){[m
[31m-         const svgs = document.querySelectorAll(".clues-svg");[m
[31m-         svgs[5].src = "/images/correct.svg"; [m
[31m-         svgs[5].classList.add("green");[m
[31m-       };[m
[31m-       [m
[31m-       // add box with X for every missed try[m
[31m-       const parent = document.querySelector(".container-clues-feed");[m
[31m-       let newBoxReview = document.createElement("img");[m
[31m-       newBoxReview.classList.add("box-review");[m
[31m-       newBoxReview.id = `tryno-${tries}`;[m
[31m-       newBoxReview.src = "/images/wrong.svg";[m
[31m-       parent.insertAdjacentElement("beforeend",newBoxReview);[m
[31m- [m
[31m- [m
[31m-     }  [m
[31m-   }).catch(error => console.error(error));[m
[31m-}[m
[31m- [m
[31m- [m
[31m- [m
\ No newline at end of file[m
[1mdiff --git a/countryreturn.js b/countryreturn.js[m
[1mdeleted file mode 100644[m
[1mindex 6b2e664..0000000[m
[1m--- a/countryreturn.js[m
[1m+++ /dev/null[m
[36m@@ -1,71 +0,0 @@[m
[31m-import { getCountries, getIndependenceYear} from "/api.js";[m
[31m-import {userInput, searchBtn, grandParent, tries, maxTries, divNum} from "/main.js";[m
[31m-import { getShortPop, getShortArea } from "./nums.js";[m
[31m-import { countryOfTheDay } from "./random.js"; [m
[31m-import {getDirections} from "/direction.js";[m
[31m-[m
[31m-[m
[31m-export function returnCountry() {[m
[31m-// function to return correctAnswer[m
[31m- getCountries(userInput.value).then(country => {[m
[31m-    // ------------------------------------------------------------- \\[m
[31m-       // creating clues container as parent to all svgs and clues text[m
[31m-       const newClues = document.createElement("div");[m
[31m-       newClues.classList.add("container-clues");[m
[31m-       newClues.id = `container-clues-${divNum}`;[m
[31m-       // appending the div[m
[31m-       grandParent.insertAdjacentElement("afterbegin", newClues);[m
[31m-     // ------------------------------------------------------------- \\[m
[31m-     // creating 5 rounded divs and text[m
[31m-     for(let i = 0; i < 6; i++) {[m
[31m-       const newRounded = document.createElement("div");[m
[31m-       newRounded.classList.add("rounded");[m
[31m-       newClues.insertAdjacentElement("afterbegin", newRounded);[m
[31m-   [m
[31m-       // creating 5 imgs for svg's[m
[31m-       const newImgSvg = document.createElement("img");[m
[31m-       newImgSvg.classList.add("clues-svg");[m
[31m-       newRounded.insertAdjacentElement("afterbegin", newImgSvg);[m
[31m-     [m
[31m-       // creating 5 text under svg's[m
[31m-       const newClesText = document.createElement("h3");[m
[31m-       newClesText.classList.add("clues-text");[m
[31m-       newClesText.textContent = "testing";[m
[31m-       newRounded.insertAdjacentElement("beforeend", newClesText);[m
[31m-     }[m
[31m-     for(let j = 1; j < 6; j++) {[m
[31m-       const parentFetch = document.querySelectorAll(".rounded");[m
[31m-       document.querySelectorAll(".clues-svg")[j].src = "/images/svg-control.svg";[m
[31m-       const newTitleType = document.createElement("h2");[m
[31m-       newTitleType.classList.add("title-type");[m
[31m-       newTitleType.innerText = "population";[m
[31m-       parentFetch[j].insertAdjacentElement("afterbegin", newTitleType);[m
[31m-     }[m
[31m-       // changing the type of values in clues box[m
[31m-       document.querySelectorAll(".title-type")[0].innerText = "population";[m
[31m-       document.querySelectorAll(".title-type")[1].innerText = "independence";[m
[31m-       document.querySelectorAll(".title-type")[2].innerText = "size";[m
[31m-       document.querySelectorAll(".title-type")[3].innerText = "direction";[m
[31m-       document.querySelectorAll(".title-type")[4].innerText = "region";[m
[31m-       // formating returned values from searched to present in clues box[m
[31m-       document.querySelectorAll(".clues-text")[0].style = "opacity: 0.4";[m
[31m-       document.querySelectorAll(".clues-text")[0].innerText = `${country.shortName}`;[m
[31m-   [m
[31m-       document.querySelectorAll(".clues-text")[1].innerText = getShortPop(country.population);[m
[31m-   [m
[31m-       getIndependenceYear(country.name).then(year => {[m
[31m-         document.querySelectorAll(".clues-text")[2].innerText = year;[m
[31m-         [m
[31m-       }).catch(error => {[m
[31m-         console.error(error);[m
[31m-       });[m
[31m-   [m
[31m-       document.querySelectorAll(".clues-text")[3].innerText = getShortArea(country.area);[m
[31m-[m
[31m-       document.querySelectorAll(".clues-text")[4].innerText = getDirections(userInput.value, countryOfTheDay.name.common);[m
[31m-       document.querySelectorAll(".clues-text")[5].innerText = `${country.subregion}`;[m
[31m-       document.querySelectorAll(".clues-svg")[5].src = "/images/wrong.svg";[m
[31m-       document.querySelectorAll(".clues-svg")[0].src = `${country.flag}`;[m
[31m-       document.querySelectorAll(".clues-svg")[0].id = "country-svg-small";[m
[31m-       document.querySelectorAll(".clues-svg")[0].style = "border-radius: 50%; position: relative; float: left; width: 50%;";[m
[31m-       })}[m
\ No newline at end of file[m
[1mdiff --git a/css/style.css b/css/style.css[m
[1mindex 6790988..fa17ef2 100644[m
[1m--- a/css/style.css[m
[1m+++ b/css/style.css[m
[36m@@ -22,16 +22,20 @@[m [mnav .nav {[m
   width: 520px !important;[m
   height: 100%;[m
   margin: 0 auto;[m
[32m+[m[32m  border-bottom: 2px solid white;[m
 }[m
 nav .nav ul {[m
[32m+[m[32m  padding: 0;[m
   display: flex;[m
[31m-  width: initial;[m
[31m-  justify-content: space-between;[m
[32m+[m[32m  width: 500px;[m
[32m+[m[32m  justify-content: space-evenly;[m
 }[m
 nav .nav a {[m
[31m-  text-transform: uppercase;[m
   color: white;[m
 }[m
[32m+[m[32mnav .nav a:hover {[m
[32m+[m[32m  color: var(--clr-greenAction);[m
[32m+[m[32m}[m
 [m
 main {[m
   background-image: url("/images/bg.jpg");[m
[36m@@ -52,8 +56,59 @@[m [mmain .container {[m
   justify-content: center;[m
   text-align: center;[m
 }[m
[32m+[m[32mmain .container .container-flag {[m
[32m+[m[32m  height: -moz-fit-content;[m
[32m+[m[32m  height: fit-content;[m
[32m+[m[32m  margin: 1rem 0;[m
[32m+[m[32m  border: 2px solid grey;[m
[32m+[m[32m  background-color: grey;[m
[32m+[m[32m  border-radius: 0.3rem;[m
[32m+[m[32m}[m
[32m+[m[32mmain .container .container-flag .clues-btns {[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  position: relative;[m
[32m+[m[32m  flex-direction: column;[m
[32m+[m[32m  float: right;[m
[32m+[m[32m  height: 100%;[m
[32m+[m[32m  width: -moz-fit-content;[m
[32m+[m[32m  width: fit-content;[m
[32m+[m[32m  margin: 0.5rem 0.3rem;[m
[32m+[m[32m}[m
[32m+[m[32mmain .container .container-flag .clues-btns .title-sidebar {[m
[32m+[m[32m  font-size: 0.8rem;[m
[32m+[m[32m  color: white;[m
[32m+[m[32m}[m
[32m+[m[32mmain .container .container-flag .clues-btns button {[m
[32m+[m[32m  width: -moz-fit-content;[m
[32m+[m[32m  width: fit-content;[m
[32m+[m[32m  position: relative;[m
[32m+[m[32m  margin: 0.5rem;[m
[32m+[m[32m  padding: 0.3rem;[m
[32m+[m[32m  background-color: rgb(161, 161, 161);[m
[32m+[m[32m  border: none;[m
[32m+[m[32m  right: -1%;[m
[32m+[m[32m  outline: none;[m
[32m+[m[32m  border-radius: 0.2rem;[m
[32m+[m[32m  cursor: pointer;[m
[32m+[m[32m  color: rgb(77, 77, 77);[m
[32m+[m[32m  transition: 0.2s ease;[m
[32m+[m[32m}[m
[32m+[m[32mmain .container .container-flag .clues-btns button:hover {[m
[32m+[m[32m  transform: scale(1.1);[m
[32m+[m[32m  background-color: var(--clr-greenAction);[m
[32m+[m[32m}[m
[32m+[m[32mmain .container .container-flag .country-name {[m
[32m+[m[32m  font-weight: 800;[m
[32m+[m[32m  color: white;[m
[32m+[m[32m}[m
[32m+[m[32mmain .container .container-flag h3.feedback {[m
[32m+[m[32m  color: white;[m
[32m+[m[32m}[m
 main .container .country-flag {[m
[31m-  filter: grayscale(2) blur(45px) sepia(1.2) brightness(1.3);[m
[32m+[m[32m  padding: 1rem 0;[m
[32m+[m[32m  max-width: 300px !important;[m
[32m+[m[32m  height: 150px !important;[m
[32m+[m[32m  filter: blur(800px) grayscale(2);[m
 }[m
 main .container h3.clues-title {[m
   color: #a5a5a5;[m
[36m@@ -84,12 +139,6 @@[m [mmain .container h3.clues-title {[m
   margin: 0.5rem 0.5rem;[m
 }[m
 [m
[31m-img.country-flag {[m
[31m-  padding: 5rem 0;[m
[31m-  max-width: 300px !important;[m
[31m-  height: 150px !important;[m
[31m-}[m
[31m-[m
 input#userinput {[m
   position: relative;[m
   width: 100%;[m
[36m@@ -100,7 +149,6 @@[m [minput#userinput {[m
   outline: none;[m
   color: var(--clr-darkgreen);[m
   padding: 0 0.5rem;[m
[31m-  font-weight: 100;[m
 }[m
 [m
 .container-search {[m
[36m@@ -111,7 +159,6 @@[m [minput#userinput {[m
   grid-template-columns: 2fr 2fr;[m
   width: 530px;[m
   background-color: #ffffff;[m
[31m-  box-shadow: 0px 0px 20px rgb(0, 0, 0);[m
   border-radius: 0.3rem;[m
 }[m
 [m
[36m@@ -134,30 +181,30 @@[m [mbutton.btn-search {[m
 }[m
 [m
 .suggestions-container {[m
[31m-  width: 65%;[m
[32m+[m[32m  width: 68%;[m
   margin-top: -1rem;[m
   max-height: 200px;[m
   cursor: pointer;[m
[31m-  background-color: rgba(66, 66, 66, 0.7137254902);[m
[32m+[m[32m  background-color: #fff;[m
   padding: 1rem 0.5rem;[m
   border-radius: 0.3rem;[m
   color: rgba(209, 209, 209, 0.714);[m
   visibility: hidden;[m
[31m-  overflow-y: scroll;[m
[32m+[m[32m  overflow-y: hidden;[m
   scroll-behavior: smooth;[m
[31m-  scrollbar-color: var(--clr-darkgreen) white;[m
 }[m
 [m
 .suggestions-content {[m
   display: flex;[m
[31m-  font-size: 1rem;[m
[32m+[m[32m  font-size: 0.8rem;[m
   padding: 0.5rem 0.3rem;[m
   max-height: 200px;[m
   overflow: hidden;[m
   border-radius: 0.3rem;[m
[32m+[m[32m  color: rgb(156, 156, 156);[m
 }[m
 .suggestions-content:hover {[m
[31m-  color: #a5ff81;[m
[32m+[m[32m  color: #487a34;[m
 }[m
 [m
 .script-div {[m
[36m@@ -214,7 +261,7 @@[m [mimg.clues-svg.green:not(:first-child) {[m
 }[m
 [m
 .rounded {[m
[31m-  padding: 0.5rem 0;[m
[32m+[m[32m  padding: 0.5rem 0.3rem;[m
   height: 40%;[m
   text-align: center;[m
   width: 40% !important;[m
[36m@@ -224,11 +271,14 @@[m [mimg.clues-svg.green:not(:first-child) {[m
   color: var(--clr-grey);[m
 }[m
 .rounded h3.clues-text {[m
[31m-  font-size: 0.9rem;[m
[32m+[m[32m  font-size: 0.8rem;[m
   color: rgba(255, 255, 255, 0.5333333333);[m
 }[m
 [m
 @media (max-width: 890px) {[m
[32m+[m[32m  body {[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m  }[m
   nav {[m
     height: 5vh;[m
     width: 100%;[m
[36m@@ -237,17 +287,31 @@[m [mimg.clues-svg.green:not(:first-child) {[m
     width: 300px !important;[m
     height: 100%;[m
     margin: 0 auto;[m
[31m-    position: fixed;[m
[32m+[m[32m    border-bottom: 2px solid white;[m
   }[m
   nav .nav ul {[m
[32m+[m[32m    padding: 0;[m
     display: flex;[m
[31m-    width: 100%;[m
[31m-    justify-content: space-between;[m
[32m+[m[32m    width: 300px !important;[m
[32m+[m[32m    justify-content: space-evenly;[m
   }[m
   nav .nav a {[m
[31m-    text-transform: uppercase;[m
[32m+[m[32m    font-size: 1.5rem;[m
     color: white;[m
   }[m
[32m+[m[32m  .popup {[m
[32m+[m[32m    padding: 2rem 2rem;[m
[32m+[m[32m    display: block;[m
[32m+[m[32m    margin: 1rem 2rem;[m
[32m+[m[32m    position: absolute;[m
[32m+[m[32m    z-index: 5;[m
[32m+[m[32m    width: 300px !important;[m
[32m+[m[32m    height: 500px !important;[m
[32m+[m[32m    border-radius: 1rem;[m
[32m+[m[32m    background-color: #8d8d8d;[m
[32m+[m[32m    box-shadow: 0 0 30px rgb(0, 0, 0);[m
[32m+[m[32m    visibility: hidden;[m
[32m+[m[32m  }[m
   main {[m
     overflow-x: hidden;[m
     overflow-y: hidden;[m
[36m@@ -276,13 +340,22 @@[m [mimg.clues-svg.green:not(:first-child) {[m
     color: white;[m
     transition: 0.2s ease-out;[m
   }[m
[31m-  main .container img.country-flag {[m
[31m-    position: relative;[m
[31m-    display: flex;[m
[31m-    margin: 0.5rem 0;[m
[31m-    width: 100%;[m
[31m-    height: 20vh;[m
[31m-    filter: blur(900px) grayscale(2);[m
[32m+[m[32m  main .container-flag {[m
[32m+[m[32m    height: -moz-fit-content;[m
[32m+[m[32m    height: fit-content;[m
[32m+[m[32m    margin: 1rem 0;[m
[32m+[m[32m    border: 2px solid grey;[m
[32m+[m[32m    background-color: rgb(128, 128, 128);[m
[32m+[m[32m    border-radius: 0.3rem;[m
[32m+[m[32m  }[m
[32m+[m[32m  main .container-flag .country-name {[m
[32m+[m[32m    font-weight: 800;[m
[32m+[m[32m    color: white;[m
[32m+[m[32m  }[m
[32m+[m[32m  main .container-flag .country-flag {[m
[32m+[m[32m    padding: 1rem 0;[m
[32m+[m[32m    max-width: 300px !important;[m
[32m+[m[32m    height: 150px !important;[m
   }[m
   main .container-clues-feed {[m
     width: 300px;[m
[36m@@ -300,7 +373,7 @@[m [mimg.clues-svg.green:not(:first-child) {[m
   }[m
   .container-search #userinput {[m
     padding-top: 0.5rem;[m
[31m-    font-size: 1.2em;[m
[32m+[m[32m    font-size: 0.8em;[m
     height: 2rem;[m
   }[m
   .container-search .btn-search {[m
[1mdiff --git a/css/style.css.map b/css/style.css.map[m
[1mindex b2053d1..e53280d 100644[m
[1m--- a/css/style.css.map[m
[1m+++ b/css/style.css.map[m
[36m@@ -1 +1 @@[m
[31m-{"version":3,"sources":["style.scss","style.css"],"names":[],"mappings":"AAAA;EACE,oCAAA;EACA,wBAAA;EACA,qBAAA;ACCF;;ADEA;EACE,UAAA;EACA,SAAA;EACA,sBAAA;EACA,qBAAA;EACA,uBAAA;ACCF;;ADEA;EACE,eAAA;EACA,WAAA;EACA,WAAA;EACA,kBAAA;ACCF;ADCE;EACE,uBAAA;EACA,YAAA;EACA,cAAA;ACCJ;ADCI;EACE,aAAA;EACA,cAAA;EACA,8BAAA;ACCN;ADEI;EACE,yBAAA;EACA,YAAA;ACAN;;ADIA;EACE,uCAAA;EACA,sBAAA;EACA,wBAAA;EACA,4BAAA;EACA,wBAAA;EAAA,mBAAA;EACA,iBAAA;EACA,WAAA;ACDF;;ADKA;EACE,kBAAA;EACA,YAAA;EACA,cAAA;EACA,cAAA;EACA,uBAAA;EACA,kBAAA;ACFF;ADIE;EACE,0DAAA;ACFJ;ADME;EACE,cAAA;EACA,iBAAA;EACA,gBAAA;EACA,yBAAA;EACA,oBAAA;EACA,qBAAA;EACA,kBAAA;ACJJ;;ADOA;EACE,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,gBAAA;ACJF;ADME;EACE,YAAA;EACA,WAAA;EACA,qBAAA;EACA,kBAAA;EACA,sBAAA;EACA,qBAAA;EACA,yBAAA;EACA,cAAA;EACA,qBAAA;ACJJ;;ADOA;EACE,eAAA;EACA,2BAAA;EACA,wBAAA;ACJF;;ADQA;EACE,kBAAA;EACA,WAAA;EACA,YAAA;EACA,YAAA;EACA,qBAAA;EACA,iBAAA;EACA,aAAA;EACA,2BAAA;EACA,iBAAA;EACA,gBAAA;ACLF;;ADOA;EACE,kBAAA;EACA,aAAA;EACA,8BAAA;EACA,YAAA;EACA,8BAAA;EACA,YAAA;EACA,yBAAA;EACA,qCAAA;EACA,qBAAA;ACJF;;ADQA;EACE,UAAA;EACA,eAAA;EACA,iBAAA;EACA,wCAAA;EACA,YAAA;EACA,YAAA;EACA,qBAAA;EACA,eAAA;EACA,YAAA;ACLF;;ADQA;EACE,wCAAA;EACA,UAAA;EACA,qBAAA;ACLF;;ADQA;EACE,UAAA;EACA,iBAAA;EACA,iBAAA;EACA,eAAA;EACA,gDAAA;EACA,oBAAA;EACA,qBAAA;EACA,iCAAA;EACA,kBAAA;EACA,kBAAA;EACA,uBAAA;EACA,2CAAA;ACLF;;ADSA;EACE,aAAA;EACA,eAAA;EACA,sBAAA;EACA,iBAAA;EACA,gBAAA;EACA,qBAAA;ACNF;ADOE;EACE,cAAA;ACLJ;;ADSA;EACE,cAAA;EACA,kBAAA;EACA,YAAA;ACNF;;ADUA;EACE,uBAAA;EACA,sBAAA;EACA,mBAAA;EACA,kBAAA;EACA,wBAAA;EACA,mBAAA;EACA,iBAAA;EACA,aAAA;EACA,6BAAA;EACA,yBAAA;EACA,qBAAA;ACPF;ADSE;EACA,eAAA;EACA,yBAAA;EACA,yBAAA;ACPF;;ADWA;EACE,cAAA;EACA,WAAA;ACRF;;ADWA;EACE,kBAAA;EAC